import numpy as np
from math import sqrt
import time

start_time = time.time()

# The four adjacent digits in the 1000-digit number that have the
# greatest product are 9 x 9 x 8 x 9 = 5832.
# Find the thirteen adjacent digits in the 1000-digit number that
# have the greatest product. What is the value of this product?

digits = '73167176531330624919225119674426574742355349194934969835203127745063262395783180\
169848018694788518438586156078911294949545950173795833195285320880551112540698747158523863\
050715693290963295227443043557668966489504452445231617318564030987111217223831136222989342\
338030813533627661428280644448664523874930358907296290491560440772390713810515859307960866\
701724271218839987979087922749219016997208880937766572733300105336788122023542180975125454\
059475224352584907711670556013604839586446706324415722155397536978179778461740649551492908\
625693219784686224828397224137565705605749026140797296865241453510047482166370484403199890\
008895243450658541227588666881164271714799244429282308634656748139191231628245861786645835\
912456652947654568284891288314260769004224219022671055626321111109370544217506941658960408\
071984038509624554443629812309878799272442849091888458015616609791913387549920052406368991\
256071760605886116467109405077541002256983155200055935729725716362695618826704282524836008\
23257530420752963450'

start = 0
end = 13
largest = 0

for i in range(len(digits) + 1):
    dig_str = digits[start:end]
    total = 1
    for dig in dig_str:
        total *= int(dig)
    start += 1
    end += 1
    if total > largest:
        largest = total

print('Question 8 =', largest)  # 23514624000

print("Program took %s seconds to run." % (time.time() - start_time))
